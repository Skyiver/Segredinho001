name: Deploy

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: usuario # usuÃ¡rio
          POSTGRES_PASSWORD: senha # senha
          POSTGRES_DB: escola 
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
     steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Run Tests
        env:
          DATABASE_URL: postgresql://usuario:senha@localhost:5432/escola
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        run: |
          pip install -r requirements.txt
          pytest tests/ -v

  deploy:
    needs: test
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Generate Deployment Package
        run: |
          zip -r deploy.zip . -x *.git* *.env* tests/ venv/ __pycache__/
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Deploy to EB
        run: |
          eb init -p docker school-api
          eb deploy --staged --verbose